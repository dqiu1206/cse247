Studio 8 write up

Your TA's name:



Students in your studio group:

    Name        Student ID (begins with a 4)
	
1. David Qiu 	437405
2. Song Tianyi	451686
3.
4.
5.
6.


What distribution do you see plotted (in the histogram or an XY Scatter plot) for Color hashcodes?

Random, uniform

If the distribution were not uniform, what would the plot look like?
Normal distribution

How many Color objects are added to the set?
2
How many objects are contained in the set after all Color objects are added?
2
Why are the above two numbers different?
They have different hashcodes





Are the Point objects' hash values distributed uniformly?
yes

How many Point objects are added to the set?
2

How many Point objects are in the set after all Point objects are added?
2
What is wrong with this result?
The two points have random hash values so even though they are the same,
they are counted as different objects
Based on the code you see in Point, how is equality determined between two Point objects?
Based on randomness

Looking at the output in the console window, how does the implementation of hashCode() for Point explain the bad behavior in the set of Points?
We will have no way to differentiate between the same points

How well does your hash function fare in terms of uniformly distributed hash values for the random point objects?
It is pretty uniform


As a team, try out some ideas for Pancake's hashCode() implementation. Record your best idea in the studio8.txt file (here!):


Based on the hashCode() implementation shown to you on the web page, answer the following questions:

If two Pancake objects equal each other, will they get the same hashCode() results?
Yes
How good of a job does the implementation do of obtaining uniform distributions of hashCode() values for two Pancake objects that do not equal each other?
Not a good job because there are overlaps


Just by inspection of the hashCode() method on the web page, state two Pancakes that are different yet have the same hashCode() value.
pancake with radius 10 and wheat pancake with radius 5

Your best hashCode() for Pancake (paste the method here please):
public int hashCode(){
	int hash = radius;
	if(wheat){
		hash = -radius;
		}
		return hash;
	}




Do your hashCode() values for Pancake appear to be uniformly distributed?

Yes


Your implementation of Syrup's hashCode() -- paste here:

public int hashCode(){
		int hash = brand.hashCode() + (int)(density*101);
		return hash;
	}





How uniformly distributed are your Syrup hashCode() values?
relatively uniform


How uniformly distributed are your PancakeAndSyrup hashCode() values?

uniform











